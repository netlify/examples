---
import Layout from "../layouts/Layout.astro";
---

<Layout title="Using Astro with Motion">
  <div class="refresh">
    <button class="refresh-btn" aria-label="Refresh">
      <svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" class="icon">
        <path
          d="M12 20q-3.35 0-5.675-2.325t-2.325-5.675 2.325-5.675 5.675-2.325q1.725 0 3.3 0.713t2.7 2.037v-1.75q0-0.425 0.288-0.713t0.712-0.288 0.712 0.288 0.288 0.713v5q0 0.425-0.288 0.713t-0.712 0.288h-5q-0.425 0-0.713-0.288t-0.288-0.713 0.288-0.712 0.713-0.288h3.2q-0.8-1.4-2.187-2.2t-3.012-0.8q-2.5 0-4.25 1.75t-1.75 4.25 1.75 4.25 4.25 1.75q1.7 0 3.113-0.863t2.187-2.313q0.2-0.35 0.563-0.487t0.738-0.012q0.4 0.125 0.575 0.525t-0.025 0.75q-1.025 2-2.925 3.2t-4.225 1.2z"
        ></path>
      </svg>
    </button>
  </div>

  <section class="scrolling-section hero">
    <h2>Animate Your UI with a Motion Library</h2>
    <p>
      Effortless animations, smooth transitions, and powerful interactions—all
      with an intuitive API designed for developers of all skill levels. Elevate
      your web experience with high-performance motion.
    </p>
    <div class="btn-group">
      <a class="btn-primary" href="https://developers.netlify.com/guides/motion-animation-library-with-astro">Learn more →</a>
      <a class="btn-secondary" href="https://app.netlify.com/start/deploy?repository=https://github.com/netlify/examples/&create_from_path=examples/frameworks/astro-with-motion&utm_campaign=dx-examples">Deploy to Netlify</a>
    </div>
  </section>

  <section class="scrolling-section features">
    <h2>Powerful Features, Seamless Animations</h2>
    <p>
      Motion.dev gives you the tools to create fluid, high-performance
      animations with ease. From simple transitions to complex interactions,
      unlock the full potential of motion in your web projects.
    </p>
    <div class="card-grid">
      <div class="card">
        <h3>Simple & Declarative</h3>
        <p>
          With an intuitive API, Motion.dev makes animations easy to implement.
          Define motion properties directly in your components without worrying
          about complex animation logic.
        </p>
      </div>
      <div class="card">
        <h3>Gesture & Scroll Animations</h3>
        <p>
          Enhance interactivity with built-in support for gestures, scroll-based
          animations, and dynamic effects. Create immersive experiences that
          respond to user input.
        </p>
      </div>
      <div class="card">
        <h3>Performance Optimized</h3>
        <p>
          Built for speed, Motion.dev leverages hardware acceleration and
          optimized rendering techniques to keep animations smooth and
          efficient, even in complex appdivcations.
        </p>
      </div>
      <div class="card">
        <h3>Flexible & Customizable</h3>
        <p>
          Tailor animations to fit your design needs with a highly flexible
          system. Adjust easing, duration, and keyframes, or create custom
          animations that match your brand's style.
        </p>
      </div>
    </div>
  </section>

  <section class="scrolling-section cta">
    <h2>Ready to Animate? Let's Get Started!</h2>
    <p>
      Integrate the Motion library into your Astro project and create stunning, high-performance animations with ease. Start building today!
    </p>
    <div class="btn-group">
      <a class="btn-primary" href="https://developers.netlify.com/guides/motion-animation-library-with-astro">Start Animating →</a>
    </div>
  </section>
</Layout>

<style>
  .scrolling-section {
    opacity: 0;
    transform: translatey(50px);
    margin-bottom: clamp(6em, 10vw, 8em);
  }

  .scrolling-section h2 {
    padding-top: 0;
  }

  .cta {
    background-color: var(--shade-down-2);
    border-radius: var(--radius-3);
    padding: 2em;
  }

  .btn-group {
    display: flex;
    flex-wrap: wrap;
    gap: 1em;
    margin-top: 2em;
  }

  .btn-group a {
    margin: 0;
  }

  .card-grid {
    display: flex;
    flex-wrap: wrap;
    gap: 1.5em;
    margin: 2em 0 0;
  }

  .card {
    flex: 1 1 280px;
    border: 1px solid var(--blue-500);
    border-radius: var(--radius-3);
    padding: 1.5em;
    opacity: 0;
    transform: translatey(25px);
  }

  .card h3 {
    font-size: var(--step-2);
    padding-top: 0;
  }

  .refresh {
    display: flex;
    justify-content: flex-end;
    padding: 2em 0 0;
    position: sticky;
    top: 0;
  }

  .refresh-btn {
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: var(--step-2);
    width: 2em;
    height: 2em;
    padding: 0;
    margin: 0;
    border-radius: 1em;
  }

  .refresh-btn .icon {
    width: 1em;
    height: 1em;
    fill: currentColor;
  }
</style>

<script>
  import { animate, stagger, hover, inView, delay } from "motion";

  const refreshButton = document.querySelector(
    ".refresh-btn"
  ) as HTMLButtonElement;
  const refreshButtonIcon = refreshButton.querySelector(".icon") as HTMLElement;

  refreshButton.addEventListener("click", () => {
    window.location.reload();
  });

  const refreshIconRotation = animate(
    refreshButtonIcon,
    { rotate: 360 },
    { ease: "linear", duration: 3, repeat: Infinity }
  );
  hover(refreshButton, () => {
    refreshIconRotation.pause();
    return () => {
      refreshIconRotation.play();
    };
  });

  inView(
    ".scrolling-section",
    (element) => {
      animate(
        element,
        { opacity: [0, 1], y: [50, 0] },
        { ease: [0.39, 0.24, 0.3, 1], duration: 1 }
      );

      const cards = element.querySelectorAll(".card");
      if (cards.length > 0) {
        animate(
          cards,
          { opacity: [0, 1], y: [25, 0] },
          { type: "spring", delay: stagger(0.25, { startDelay: 0.25 }) }
        );
      }
    },
    { amount: 0.25 }
  );
</script>
